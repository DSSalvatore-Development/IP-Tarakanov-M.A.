(async function(){
  async function fetchJSON(u){ const r = await fetch(u,{cache:'no-store'}); if(!r.ok) throw new Error('not found'); return r.json(); }
  async function loadAll(){ await new Promise(res=>{ if(document.readyState!=='loading') res(); else document.addEventListener('DOMContentLoaded', ()=>res()); }); const list = await fetchJSON('modules/modules.json').catch(e=>{ window.CoreNotify.notify('modules.json not found','error'); return []; }); if(!Array.isArray(list) || list.length===0){ return; } for(const p of list){ try{ await loadModule(p); }catch(e){ window.CoreNotify.notify('Ошибка модуля '+p+': '+e.message,'error'); console.error(e); } } }
  async function loadModule(path){ const name = path.split('/').pop(); const cfg = await fetchJSON(path + '/' + name + '.module.json'); if(cfg.style){ const l=document.createElement('link'); l.rel='stylesheet'; l.href=path + '/' + cfg.style; document.head.appendChild(l); } if(!cfg.entry) throw new Error('entry missing'); await new Promise((resolve,reject)=>{ const t=setTimeout(()=>reject(new Error('module timeout')), window.CoreConfig.moduleTimeout||4500); const s=document.createElement('script'); s.src=path + '/' + cfg.entry; s.onload=()=>{ clearTimeout(t); setTimeout(()=>{ const reg=window.CoreModules && window.CoreModules[cfg.name]; if(!reg) return reject(new Error('module did not register')); try{ if(typeof reg.api.init==='function') reg.api.init(cfg.mount||'#core-content'); window.CoreNotify.notify('Модуль '+cfg.name+' загружен','success'); resolve(); }catch(e){ reject(e); } },80); }; s.onerror=()=>{ clearTimeout(t); reject(new Error('script load error')); }; document.body.appendChild(s); }); }
  document.addEventListener('DOMContentLoaded', ()=>{ loadAll().catch(e=>console.error(e)); });
})();
